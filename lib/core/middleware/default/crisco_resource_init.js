// Generated by CoffeeScript 1.4.0

/*
  A collection of the first N
  steps of Crisco initialization.
*/


(function() {
  var CriscoModels, CriscoResourceInit, Middleware;

  CriscoModels = require("" + __dirname + "/../../models/criscomodelfactory");

  /*
   Let's just define the ordered middleware here. Bind each
   anonymous function to this context so it get's access
  */


  Middleware = {
    /*
        Step 1:
    
        -Create a namespaced __crisco variable
        container the express req object.
    
        -Call user registered deserializer
        if it exists.
    */

    '1': function(req, res, next) {
      var h, m;
      req.__crisco = {};
      h = function(me) {
        if (me != null) {
          req.__crisco.me = me;
        }
        return next();
      };
      console.log;
      m = Crisco.getMiddleware("deserialize");
      if (m != null) {
        return m.call(m, req, res, h);
      } else {
        return next();
      }
    },
    /*
        Step 2:
    
        -Create CriscoModel and Aux
        instances
    */

    '2': function(domain) {
      var _this = this;
      return function(req, res, next) {
        var cm;
        console.log("Initializing Crisco Models...");
        cm = _this.__CriscoModels.get(domain);
        return req.__crisco.model = cm.init(req);
      };
    }
  };

  CriscoResourceInit = (function() {

    function CriscoResourceInit(database) {
      var appConfig, domainConfig;
      appConfig = {};
      domainConfig = {};
      this.__db = database;
      this.__CriscoModels = new CriscoModels(appConfig, domainConfig, this.__db);
    }

    CriscoResourceInit.prototype.init = function(clbk) {
      var num, route;
      for (num in Middleware) {
        route = Middleware[num];
        Middleware[num] = route.bind(this);
      }
      return clbk(null);
    };

    CriscoResourceInit.prototype.getExpressMiddleware = function(domain) {
      return [Middleware['1'], Middleware['2'](domain)];
    };

    return CriscoResourceInit;

  })();

  module.exports = CriscoResourceInit;

}).call(this);
