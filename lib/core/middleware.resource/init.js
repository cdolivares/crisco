// Generated by CoffeeScript 1.6.3
(function() {
  var CriscoResourceInit, Middleware, _;

  _ = require("underscore");

  /*
    A collection of the first N
    steps of Crisco initialization.
  */


  /*
   Let's just define the ordered middleware here. Bind each
   anonymous function to this context so it get's access to
   the instance variables.
  */


  Middleware = {
    /*
      Step 1:
    
      -Create a namespaced __crisco variable
      container on the express req object.
    
      -Call user registered deserializer
      if it exists.
    */

    '1': function(domain) {
      var _this = this;
      return function(req, res, next) {
        var h, m;
        req.__crisco = {};
        h = function(me) {
          if (me != null) {
            req.__crisco.me = me;
          }
          return next();
        };
        m = _this.__c.getMiddleware("deserialize");
        if (m != null) {
          return m.call(m, req, res, _this.__database, h);
        } else {
          return next();
        }
      };
    },
    /*
      Step 2:
    
      -Create CriscoModel and Aux
      instances
    
    # TODO(chris): Might need to curry with
      domainConfig if CriscoModel needs
      domain configurable options to bootstrap
      itself.
    */

    '2': function(domain, routeInfo) {
      var _this = this;
      return function(req, res, next) {
        var aux, cm, extendedRouteInfo;
        extendedRouteInfo = _.extend(routeInfo, {
          req: req,
          res: res
        });
        cm = _this.__primitiveFactory.getPrimitive("CriscoModel", domain, extendedRouteInfo);
        aux = _this.__primitiveFactory.getPrimitive("CriscoAux", domain, extendedRouteInfo);
        req.__crisco.model = cm;
        req.__crisco.aux = aux;
        return next();
      };
    }
  };

  CriscoResourceInit = (function() {
    function CriscoResourceInit(crisco, database, primitiveFactory) {
      this.__c = crisco;
      this.__database = database;
      this.__primitiveFactory = primitiveFactory;
    }

    CriscoResourceInit.prototype.init = function() {
      var route, step, _results;
      _results = [];
      for (step in Middleware) {
        route = Middleware[step];
        _results.push(Middleware[step] = route.bind(this));
      }
      return _results;
    };

    CriscoResourceInit.prototype.getExpressMiddleware = function(domain, routeInfo) {
      return [Middleware['1'](this.__c, domain), Middleware['2'](domain, routeInfo)];
    };

    return CriscoResourceInit;

  })();

  module.exports = CriscoResourceInit;

}).call(this);
