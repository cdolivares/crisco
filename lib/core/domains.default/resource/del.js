// Generated by CoffeeScript 1.6.2
(function() {
  var DEL,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  DEL = (function() {
    function DEL(crisco, r) {
      this.handler = __bind(this.handler, this);      this.__c = crisco;
      this.__r = r;
    }

    DEL.prototype.handler = function(req, res, next) {
      var Aux, CriscoModel,
        _this = this;

      CriscoModel = req.__crisco.model;
      Aux = req.__crisco.aux;
      return this.__r.handler(CriscoModel, Aux, function(runDefault, clbk) {
        if (runDefault == null) {
          runDefault = false;
        }
        if (runDefault) {
          console.log("Running default DELETE handler...");
          return _this._default(CriscoModel, Aux, function() {
            if (clbk != null) {
              return clbk(function() {
                return next();
              });
            } else {
              return next();
            }
          });
        }
      });
    };

    DEL.prototype._default = function(CriscoModel, Aux, next) {
      var TargetModel, targetCollection, targetId, targetNode, targets;

      targets = CriscoModel.targets();
      targetCollection = targets[0];
      targetId = CriscoModel.getParam(targetCollection);
      targetNode = CriscoModel.database.nodeManager.find(targetCollection);
      TargetModel = CriscoModel.database.drivers["" + targetNode.name];
      return TargetModel.findById(targetId, function(err, target) {
        if (err != null) {
          return Aux.res.send(500, {
            message: err.message
          });
        } else if (target == null) {
          return Aux.res.send(404, {
            message: "Target not found."
          });
        } else {
          return target.remove(function(err) {
            if (err != null) {
              return Aux.res.send(500, {
                message: err.message
              });
            } else {
              return Aux.response.success().pack(target).send();
            }
          });
        }
      });
    };

    DEL.prototype.__defineGetter__('route', function() {
      return this.__r.route;
    });

    return DEL;

  })();

  module.exports = DEL;

}).call(this);
