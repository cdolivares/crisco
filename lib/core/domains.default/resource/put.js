// Generated by CoffeeScript 1.6.2
(function() {
  var PUT,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  PUT = (function() {
    function PUT(crisco, r) {
      this.handler = __bind(this.handler, this);      this.__c = crisco;
      this.__r = r;
    }

    PUT.prototype.handler = function(req, res, next) {
      var Aux, CriscoModel,
        _this = this;

      CriscoModel = req.__crisco.model;
      Aux = req.__crisco.aux;
      return this.__r.handler(CriscoModel, Aux, function(runDefault) {
        if (runDefault == null) {
          runDefault = false;
        }
        if (runDefault) {
          console.log("Running default POST handler...");
          return _this._default(CriscoModel, Aux, function() {});
        }
      });
    };

    PUT.prototype._default = function(CriscoModel, Aux, next) {
      var clientClbk, targetCollection, targetNode, targetObject, targets;

      clientClbk = this.__c.getMiddleware("resource:default:put");
      if (clientClbk == null) {
        Aux.error("No default post logic supplied by client. Skipping...");
        return next();
      }
      targets = CriscoModel.targets();
      targetCollection = targets[0];
      targetNode = CriscoModel.database.nodeManager.find(targetCollection);
      targetObject = {
        collection: targetCollection,
        id: CriscoModel.getParam(targetCollection),
        properties: Aux.body
      };
      return clientClbk(CriscoModel, Aux, targetObject, function(err, result) {
        var o;

        if (err != null) {
          return Aux.res.send(500, {
            message: err.message
          });
        } else {
          o = {};
          o.data = {};
          o.data["" + targetCollection] = result;
          return Aux.res.send(200, o);
        }
      });
    };

    PUT.prototype.__defineGetter__('route', function() {
      return this.__r.route;
    });

    return PUT;

  })();

  module.exports = PUT;

}).call(this);
