// Generated by CoffeeScript 1.6.2
(function() {
  var Response, _;

  _ = require("underscore");

  Response = (function() {
    function Response(routeInfo) {
      this.__routeInfo = routeInfo;
      this.__cache = {};
      this.__status = 0;
      this.__message = null;
    }

    Response.prototype.pack = function(objs) {
      var t;

      if (_.isEmpty(objs)) {
        return this;
      }
      if (_.isArray(objs)) {
        t = objs[0]._type_ || "payload";
      } else {
        t = objs._type_ || "payload";
        objs = [objs];
      }
      this.__cache.objs = this.__cache.objs || {};
      this.__cache.objs["" + t] = (this.__cache.objs["" + t] || []).concat(objs);
      return this;
    };

    Response.prototype.raw = function(obj) {
      if (!_.isArray(obj)) {
        obj = [obj];
      }
      this.__cache.__raw = (this.__cache.__raw || []).concat(obj);
      return this;
    };

    Response.prototype.success = function() {
      this.status(200);
      return this;
    };

    Response.prototype.status = function(s) {
      this.__status = s;
      return this;
    };

    Response.prototype.message = function(m) {
      this.__message = m;
      return this;
    };

    Response.prototype.empty = function() {
      this.__cache.objs = {};
      return this;
    };

    Response.prototype.send = function() {
      var payload;

      if (this.__message != null) {
        return this.__routeInfo.res.json(this.__status, {
          message: this.__messsage
        });
      } else {
        payload = this.__cache.objs;
        if (this.__cache.__raw != null) {
          if (this.__cache.objs != null) {
            this.__cache.__raw.unshift(this.__cache.objs);
          }
          payload = this.__cache.__raw;
        }
        if (this.__routeInfo.getOne || (this.__routeInfo.method === "POST" && this.__routeInfo.route.indexOf("/action") === -1) || (this.__routeInfo.method === "PUT")) {
          payload = payload.shift();
        }
        return this.__routeInfo.res.json(this.__status, {
          data: payload
        });
      }
    };

    return Response;

  })();

  module.exports = Response;

}).call(this);
