// Generated by CoffeeScript 1.6.3
(function() {
  var CriscoAux, Info, Response,
    __slice = [].slice;

  Response = require("" + __dirname + "/response");

  Info = require("" + __dirname + "/info");

  CriscoAux = (function() {
    /*
    
      CLASS METHODS
    */

    /*
      Private Class Var Container
    */

    CriscoAux.__vars = {};

    /*
      Static Class Method: Config
    
      Deals with storing the application level
      configurations.
    
      @param - appConfigs
    
      @param - domainConfigs
    
      @param - database
    */


    CriscoAux.config = function(appConfigs, domainConfigs, database) {
      this.__vars.configs = this.__vars.configs || {};
      this.__vars.configs.app = appConfigs;
      this.__vars.configs.domain = domainConfigs;
      return this.__vars.database = database;
    };

    /*
      Static Class Method: Init
    
      Deals with initializing a new instance of
      CriscoModel.  This understands how to initialize
      off a "req" object from express.
      
      @param - crisco
    
      @param - domain - A string representing the
               domain to initalize a new Aux object.
    
      @param - routeInfo
    */


    CriscoAux.init = function(crisco, domain, routeInfo) {
      /*
        Eventually we'll also include logic to initialize
        and cache any shared resources between CriscoModel.
      */

      return new this(crisco, domain, this.__vars.database, routeInfo);
    };

    /*
      
      INSTANCE METHODS
    */


    /*
      Method: constructor
    
      @param - domain <String>, The current
      @param - database <Object>, and instance
               of the dojo database object.
      @param - routeInfo - an object containing
               information about this specific
               request
               Includes:
                    routeInfo =
                      route: {
                        Express Object from req.route: see 
                        http://expressjs.com/api.html#req.route for more info
                      } 
                      method: "GET|POST|PUT|DELETE"
                      query:  {queryString: Parameter}
                      body:   {body: Parameter}
               Query and/or body may not be defined
               depending on the HTTP Method used
                
                Example express req.route object:
                { 
                  path: '/user/:id?',
                  method: 'get',
                  callbacks: [ [Function] ],
                  keys: [ { name: 'id', optional: true } ],
                  regexp: /^\/user(?:\/([^\/]+?))?\/?$/i,
                  params: [ id: '12' ] 
                }
    */


    function CriscoAux(crisco, domain, database, routeInfo) {
      this.__crisco = crisco;
      this.__domain = domain;
      this.__database = database;
      this.__routeInfo = routeInfo;
      this.__cache = {};
    }

    /*
      Method: log
      
      A configured logger instance for each domain.
      For now defer to default console.log
    */


    CriscoAux.prototype.log = function() {
      var args;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      return console.log.apply(null, args);
    };

    /*
      Method: error
    
      A configured error instance for each domain.
      For now defer to default console.error
    */


    CriscoAux.prototype.error = function() {
      var args;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      return console.error.apply(null, args);
    };

    /*
      Getters
    */


    CriscoAux.prototype.__defineGetter__("response", function() {
      return this.__cache.response = this.__cache.response || new Response(this.__routeInfo);
    });

    CriscoAux.prototype.__defineGetter__("info", function() {
      return this.__cache.info = this.__cache.info || new Info();
    });

    /*
      req - An untouched Express.js req object.
    */


    CriscoAux.prototype.__defineGetter__("req", function() {
      return this.__routeInfo.req;
    });

    /*
      res - An untouched Express.js res object.
    */


    CriscoAux.prototype.__defineGetter__("res", function() {
      return this.__routeInfo.res;
    });

    CriscoAux.prototype.__defineGetter__("routeInfo", function() {
      return this.__routeInfo;
    });

    /*
      Contract is to return an object keyed with
      the query objects.
    */


    CriscoAux.prototype.__defineGetter__("query", function() {
      return this.__routeInfo.req.query;
    });

    CriscoAux.prototype.__defineGetter__("body", function() {
      return this.__routeInfo.req.body;
    });

    CriscoAux.prototype.__defineGetter__("attachments", function() {
      var req;
      req = this.__routeInfo.req;
      if (req.query != null) {
        if (req.query.attach != null) {
          return req.query.attach.split(',');
        }
      }
      return [];
    });

    CriscoAux.prototype.__defineGetter__("crisco", function() {
      return this.__crisco;
    });

    CriscoAux.prototype.__defineGetter__("me", function() {
      if (this.__routeInfo.req.__crisco == null) {
        return null;
      } else {
        return this.__routeInfo.req.__crisco.me;
      }
    });

    return CriscoAux;

  })();

  module.exports = CriscoAux;

}).call(this);
