// Generated by CoffeeScript 1.6.2
/*
  Class: RouteInitializer

  Responsible for readying in
  application configuration
  files. Currently, this means
  Resource and Action definition
  files.
*/


(function() {
  var RouteInitializer;

  RouteInitializer = (function() {
    /*
      Method: constructor
    
      @param - getter - initializes
      @param - collector - a request collector that knows
               how to add serialized configuration objects
               to the target server, in this case Express.
    */
    function RouteInitializer(getter, collector) {
      this.__g = getter;
      this.__c = collector;
      this.__serializedConfigs = {};
    }

    /*
      Method: init
    
      Initializes the getter which, in turn, requires
      the loaded file or file dir. In this case that means
    */


    RouteInitializer.prototype.init = function(clbk) {
      var c, n, _ref;

      this.__g.init();
      _ref = this.__g.get();
      for (n in _ref) {
        c = _ref[n];
        this.__serializedConfigs[n] = c.serialize();
      }
      return clbk();
    };

    RouteInitializer.prototype.enrich = function(clbk) {
      var confObj, name, _ref, _results;

      _ref = this.__g.get();
      _results = [];
      for (name in _ref) {
        confObj = _ref[name];
        _results.push(this.__c.add(name, confObj.serialize()));
      }
      return _results;
    };

    /*
      Getter Configs
    */


    RouteInitializer.prototype.__defineGetter__("serializedConfigs", function() {
      return this.__serializedConfigs;
    });

    return RouteInitializer;

  })();

  module.exports = RouteInitializer;

}).call(this);
