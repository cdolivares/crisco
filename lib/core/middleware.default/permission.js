// Generated by CoffeeScript 1.6.2
(function() {
  module.exports = function(CriscoModels, Aux, next) {
    var deny, node, nodeManager, notFound, target, targets, _i, _len;

    console.log("Running Permission Middleware");
    deny = function() {
      return Aux.response.status(401).message("Not Authorized").send();
    };
    notFound = function(type) {
      return Aux.response.status(404).message("Object for " + type + " id not found").send();
    };
    targets = CriscoModels.targets();
    nodeManager = CriscoModels.database.nodeManager;
    if ((targets.length === 1) && (CriscoModels.getParam(targets[0]) == null)) {
      return next();
    }
    for (_i = 0, _len = targets.length; _i < _len; _i += 1) {
      target = targets[_i];
      node = nodeManager.find(target);
      if (node == null) {
        continue;
      }
      if (node.isRoot) {
        return CriscoModels.populate(function(err, models) {
          var me, o, t, v;

          t = models[node.alternateName];
          if (t == null) {
            return notFound(node.alternateName);
          }
          me = Aux.me;
          v = Aux.crisco.getMiddleware("verify:permission");
          if (v == null) {
            console.error("-------------------------");
            console.error("No permission verification handler registered:");
            console.error("    -url: " + Aux.req.url);
            console.error("-------------------------");
            return deny();
          }
          o = {
            type: Aux.req.method,
            actor: me,
            target: t,
            database: CriscoModels.database
          };
          return v(o, function(auth) {
            if (auth) {
              return next();
            } else {
              return deny();
            }
          });
        });
      }
    }
    console.error("Could not find a root for permissions please check route " + Aux.req.url);
    return deny();
  };

}).call(this);
