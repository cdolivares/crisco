// Generated by CoffeeScript 1.6.3
(function() {
  var async, defaultJobs, _;

  async = require("async");

  _ = require("underscore");

  module.exports = function(CriscoModels, Aux, next) {
    var a, anObject, att, attach, job, jobs, k, o, v, _i, _j, _len, _len1, _ref, _ref1,
      _this = this;
    console.log("Running Attachments Middleware");
    job = function(type, obj) {
      return function(callback) {
        return obj.attach(type, Aux.me, callback);
      };
    };
    att = Aux.attachments;
    if (_.isEmpty(Aux.response.payload.objs)) {
      return Aux.response.send();
    } else {
      jobs = [];
      anObject = Aux.response.payload.objs[0];
      _ref = Aux.response.payload.objs;
      for (_i = 0, _len = _ref.length; _i < _len; _i += 1) {
        o = _ref[_i];
        attach = "";
        for (_j = 0, _len1 = att.length; _j < _len1; _j += 1) {
          a = att[_j];
          attach += "," + a;
        }
        _ref1 = anObject._configuration_.attach;
        for (k in _ref1) {
          v = _ref1[k];
          if (k.match(/^required\:/)) {
            attach += "," + k;
          }
        }
        attach = attach.slice(1);
        jobs.push(job(attach, o));
      }
      return async.parallel(jobs, function(err, results) {
        if (err == null) {
          return Aux.response.pack(results, true).send();
        }
      });
    }
  };

  defaultJobs = function(objectType, callback) {};

}).call(this);
