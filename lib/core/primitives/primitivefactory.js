// Generated by CoffeeScript 1.6.2
/*
  Class: Primitive Factory

  Handles initializing new Crisco Primitives:
    -CriscoModel
    -CriscoAction
    -Aux
*/


(function() {
  var PrimitiveFactory;

  PrimitiveFactory = (function() {
    /*
      Method: constructor
    
      @param - appConfig - Application level configurations
               defined on Crisco.
      @param - domainConfig - An object containing all the
               serialized action and resource domain
               configurations
      @param - database - instance of database
    */
    function PrimitiveFactory(crisco, domainConfig, database) {
      this.__configs = {
        app: crisco.appConfig,
        domain: domainConfig
      };
      this.__database = database;
      this.__primitives = {};
    }

    PrimitiveFactory.prototype.registerPrimitive = function(name, P) {
      P.config(this.__configs.app, this.__configs.domain, this.__database);
      return this.__primitives[name] = P;
    };

    /*
      should be generalized to (name, domain, routeInfo) where req, res
      are simply properties on routeInfo.
    */


    PrimitiveFactory.prototype.getPrimitive = function(name, domain, routeInfo) {
      var P;

      P = this.__primitives[name];
      if (P == null) {
        return null;
      }
      return P.init(crisco, domain, routeInfo);
    };

    return PrimitiveFactory;

  })();

  module.exports = PrimitiveFactory;

}).call(this);
